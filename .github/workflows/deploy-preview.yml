# neon ref: https://neon.tech/blog/branching-with-preview-environments

name: Deploy Preview

on: [pull_request]

jobs:
  neon-preview:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7

      - name: Install the Neon CLI
        run: npm install -g neonctl

      # This is just so the env check doesn't fail on missing variables.
      # DATABASE_URL && DATABASE_WRITE_URL will be overwritten below.
      - name: Copy env
        shell: bash
        run: cp .env.example .env

      # If the branch already exists, this command will fail but the workflow will continue
      - name: Create a Neon branch
        id: create-branch
        run: |
          output=$(neonctl branches create --project-id ${{ secrets.NEON_PROJECT_ID }} --name ${{ steps.branch-name.outputs.current_branch }} --api-key ${{ secrets.NEON_API_KEY }} --compute --type read_write 2>&1) || true
          if [[ $output == *"branch with the provided name \"${{ steps.branch-name.outputs.current_branch }}\" already exists"* ]]; then
            echo "A branch named \"${{ steps.branch-name.outputs.current_branch }}\" already exists. Using that branch for this preview deployment."
          elif [[ -n $output ]]; then
            echo "Unhandled error: $output" && exit 1
          fi

      # The branch ID is needed to display the URL of the branch in the comment.
      - name: Get Neon branch ID
        id: get-neon-branch-id
        run: |
          echo branch_id=$(neonctl branches get ${{ steps.branch-name.outputs.current_branch }} --project-id ${{ secrets.NEON_PROJECT_ID }} --api-key ${{ secrets.NEON_API_KEY }} --output json | jq -r '.id') >> $GITHUB_OUTPUT

      # Setup node/pnpm/turbo
      - name: Setup
        uses: ./tooling/github/setup

      - name: Run Drizzle Generate and Push
        id: drizzle
        run: |
          touch .env

          DATABASE_URL=$(neonctl cs ${{ steps.branch-name.outputs.current_branch }} --project-id ${{ secrets.NEON_PROJECT_ID }} --role-name ${{ secrets.PG_USERNAME }} --database-name ${{ secrets.PG_DATABASE }} --api-key ${{ secrets.NEON_API_KEY }})?sslmode=require
          DATABASE_WRITE_URL=$(neonctl cs ${{ steps.branch-name.outputs.current_branch }} --project-id ${{ secrets.NEON_PROJECT_ID }} --role-name ${{ secrets.PG_USERNAME }} --database-name ${{ secrets.PG_DATABASE }} --api-key ${{ secrets.NEON_API_KEY }})?sslmode=require

          echo DATABASE_WRITE_URL=$DATABASE_WRITE_URL >> .env

          pnpm db:push

          echo "database_url=$DATABASE_URL" >> $GITHUB_OUTPUT

    outputs:
      git_branch_name: ${{ steps.branch-name.outputs.current_branch }}
      neon_branch_id: ${{ steps.get-neon-branch-id.outputs.branch_id }}
      database_url: ${{ steps.drizzle.outputs.database_url }}

  app-deploy:
    name: vercel preview - app.barely.io
    needs: [neon-preview]
    runs-on: ubuntu-latest
    env:
      VERCEL_ACCESS_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_APP_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Install Vercel CLI
        run: |
          npm install --global vercel@latest

      # For now, we're manually removing and re-adding the environment variables. Might be a simpler way to directly replace them, but got errors when trying to do that.
      - name: Update Vercel Environment Variables for this Branch
        run: |
          vercel env rm DATABASE_READ_POOL_URL preview ${{ needs.neon-preview.outputs.git_branch_name }} --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm DATABASE_READ_URL preview ${{ needs.neon-preview.outputs.git_branch_name }} --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm DATABASE_WRITE_POOL_URL preview ${{ needs.neon-preview.outputs.git_branch_name }} --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm DATABASE_WRITE_URL preview ${{ needs.neon-preview.outputs.git_branch_name }} --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm DIRECT_DATABASE_URL preview ${{ needs.neon-preview.outputs.git_branch_name }} --yes --token=${{ secrets.VERCEL_TOKEN }}
          echo ${{ needs.neon-preview.outputs.database_url }}  | vercel env add DATABASE_READ_POOL_URL preview ${{ needs.neon-preview.outputs.git_branch_name }} --token=${{ secrets.VERCEL_TOKEN }}
          echo ${{ needs.neon-preview.outputs.database_url }}  | vercel env add DATABASE_READ_URL preview ${{ needs.neon-preview.outputs.git_branch_name }} --token=${{ secrets.VERCEL_TOKEN }}
          echo ${{ needs.neon-preview.outputs.database_url }}  | vercel env add DATABASE_WRITE_POOL_URL preview ${{ needs.neon-preview.outputs.git_branch_name }} --token=${{ secrets.VERCEL_TOKEN }}
          echo ${{ needs.neon-preview.outputs.database_url }}  | vercel env add DATABASE_WRITE_URL preview ${{ needs.neon-preview.outputs.git_branch_name }} --token=${{ secrets.VERCEL_TOKEN }}
          echo ${{ needs.neon-preview.outputs.database_url }}  | vercel env add DIRECT_DATABASE_URL preview ${{ needs.neon-preview.outputs.git_branch_name }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Pull Vercel Environment Information
        run: vercel env pull --environment=preview --git-branch=${{ needs.neon-preview.outputs.git_branch_name }} --token=${{ secrets.VERCEL_TOKEN }} .env

      - name: Build App Project Artifacts
        run: pnpm build --filter=@barely/app

      - name: Deploy App Preview to Vercel
        id: deploy-app
        run: echo preview_url=$(vercel deploy --prebuilt --) >> $GITHUB_OUTPUT

      - name: Comment on Pull Request
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Vercel Preview URL :rocket: : ${{ steps.deploy-app.outputs.preview_url }}
            Neon branch :elephant: : https://console.neon.tech/app/projects/${{ secrets.NEON_PROJECT_ID }}/branches/${{ needs.neon-preview.outputs.neon_branch_id }}

  # link-deploy:

  # www-deploy:
