name: Deploy Production

on:
  merge_group:
    types: [checks_requested]

jobs:
  build-prod--see-status:
    runs-on: ubuntu-latest
    steps:
      - name: "Immediate success"
        run: true

  build-app:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      TURBO_TEAM: ${{ secrets.VERCEL_TEAM_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_APP_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup node/pnpm/turbo
        uses: ./tooling/github/setup

      - name: Install Vercel CLI
        run: |
          pnpm install -g vercel@latest
          vercel link --repo --scope=barelylabs --yes --token=$VERCEL_TOKEN
          vercel link --cwd apps/app --scope=barelylabs --yes --token=$VERCEL_TOKEN

      - name: Pull Vercel -- app
        run:
          vercel pull --cwd apps/app --yes --environment=production --token=$VERCEL_TOKEN
          cp ./apps/app/.vercel/.env.production.local .env

      - name: Build app
        run: turbo build:vercel --filter=@barely/app --token=$VERCEL_TOKEN

  build-link:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      TURBO_TEAM: ${{ secrets.VERCEL_TEAM_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_LINK_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup node/pnpm/turbo
        uses: ./tooling/github/setup

      - name: Install Vercel CLI
        run: |
          pnpm install -g vercel@latest
          vercel link --repo --scope=barelylabs --yes --token=$VERCEL_TOKEN
          vercel link --cwd apps/link --scope=barelylabs --yes --token=$VERCEL_TOKEN

      - name: Pull Vercel -- link

        run: |
          vercel pull --cwd apps/link --yes --environment=production --token=$VERCEL_TOKEN
          cp ./apps/link/.vercel/.env.production.local .env

      - name: Build link
        run: turbo build:vercel --filter=@barely/link --token=$VERCEL_TOKEN

  build-prod--can-merge:
    needs: [build-app, build-link]
    if: always() && github.event_name == 'merge_group'
    permissions:
      actions: read
    runs-on: ubuntu-latest
    steps:
      - name: Transform outcomes
        env:
          NEEDS_JSON: "${{ toJson(needs) }}"
        run: |
          echo "ALL_SUCCESS=$(echo "$NEEDS_JSON" | jq '. | to_entries | map([.value.result == "success", .value.result == "skipped"] | any) | all')" >> $GITHUB_ENV

      - name: Check outcomes
        run: "[ $ALL_SUCCESS = true ]"
