@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
	:root {
		--background: 100% 0 0;
		--foreground: 13.71% 0.036 258.53;
		--card: 100% 0 0;
		--card-foreground: 13.71% 0.036 258.53;
		--popover: 100% 0 0;
		--popover-foreground: 13.71% 0.036 258.53;
		--primary: 20.79% 0.04 265.73;
		--primary-foreground: 98.38% 0.003 247.86;
		--secondary: 96.84% 0.007 247.9;
		--secondary-foreground: 20.79% 0.04 265.73;
		--subtle: 96.84% 0.007 247.9; /* slate-100 */
		--subtle-foreground: 71.07% 0.035 256.79; /* slate-400 */
		--muted: 92.9% 0.013 255.53; /* slate-200 */
		--muted-foreground: 44.55% 0.037 257.29; /* slate-600 */
		--accent: 86.88% 0.02 252.85; /* slate-300 */
		--accent-foreground: 28% 0.037 259.97; /* slate-800 */
		--destructive: 63.68% 0.208 25.33;
		--destructive-foreground: 98.38% 0.003 247.86;
		--border: 92.9% 0.013 255.53;
		--input: 92.9% 0.013 255.53;
		--ring: 13.71% 0.036 258.53;
		--radius: 0.5rem;

		--success: 51.13% 0.139 143.2;
		--success-foreground: 98.06% 0.021 150.52;
		--warning: 76.97% 0.165 70.61;
		--warning-foreground: 96.22% 0.057 95.61;
	}

	.dark {
		--background: 13.71% 0.036 258.53;
		--foreground: 98.38% 0.003 247.86;
		--card: 13.71% 0.036 258.53;
		--card-foreground: 98.38% 0.003 247.86;
		--popover: 13.71% 0.036 258.53;
		--popover-foreground: 98.38% 0.003 247.86;
		--primary: 98.38% 0.003 247.86;
		--primary-foreground: 20.79% 0.04 265.73;
		--secondary: 28% 0.037 259.97;
		--secondary-foreground: 98.38% 0.003 247.86;
		--subtle: 20.79% 0.04 265.73; /* slate-900 */
		--subtle-foreground: 44.55% 0.037 257.29; /* slate-600 */
		--muted: 28% 0.037 259.97; /* slate-800 */
		--muted-foreground: 71.07% 0.035 256.79; /* slate-400 */
		--accent: 37.2% 0.039 257.3; /* slate-700 */
		--accent-foreground: 92.9% 0.013 255.53; /* slate-200 */
		--destructive: 39.59% 0.133 25.72;
		--destructive-foreground: 98.38% 0.003 247.86;
		--border: 28% 0.037 259.97;
		--input: 28% 0.037 259.97;
		--ring: 98.38% 0.003 247.86;

		--success: 98.06% 0.021 150.52;
		--success-foreground: 51.13% 0.139 143.2;
		--warning: 76.97% 0.165 70.61;
		--warning-foreground: 96.22% 0.057 95.61;
	}

	* {
		@apply border-border;
	}

	body {
		@apply bg-background text-foreground;
		font-feature-settings:
			'rlig' 1,
			'calt' 1;
	}
}

@layer components {
	.my-line-highlight span.token {
		@apply bg-border;
	}

	.prose {
		min-width: 0;
		max-width: 100%;
		& code {
			@apply bg-muted px-1 text-secondary-foreground;

			&:before,
			&:after {
				content: none;
				@apply text-accent-foreground;
			}
		}

		& a {
			@apply text-muted;
			text-decoration: none;
		}

		& code[data-lexical-text] {
			@apply font-mono;
			font-size: inherit;
			font-weight: inherit;

			&:before,
			&:after {
				content: none;
			}
		}

		/* reset the prose borders */
		& [data-lexical-decorator] > table {
			table-layout: fixed;

			& td {
				vertical-align: middle;
			}

			& > thead,
			& > tfoot,
			& > tbody > tr {
				border: 0;
			}

			& [data-tool-cell] {
				padding: 1px;
				border: 0;
				line-height: 1rem;
				vertical-align: middle;
			}

			& > thead [data-tool-cell]:first-child {
				vertical-align: middle;
			}
		}

		& pre[class*='language-'] {
			overflow-x: auto;
		}

		& pre[class*='language-'],
		& code[class*='language-'] {
			@apply font-mono;
			font-size: inherit;
		}

		& pre[class*='language-'] > code {
			@apply text-sm;
			display: block;
		}

		& [data-editor-type='frontmatter'] {
			& table {
				margin: 0;
				font-size: inherit;
				width: auto;

				& thead,
				& tbody,
				& tfoot,
				& tr {
					border: 0;
				}
			}
		}

		& li[role='checkbox'] {
			text-indent: 1.2rem;
		}

		& li[role='checkbox']::before {
			transform: translate(6px, 6px);
		}

		& li[role='checkbox']::after {
			transform: translate(6px, 6px) rotate(45deg);
		}

		/* Add this new rule */
		& :not(pre) > code {
			position: relative;
		}

		/* &
			:not(pre)
			> code:is([class*='language-'], [data-lexical-text]):not(::before, ::after) {
			background: none;
		} */

		& :not(pre) > code:not([class*='language-'], [data-lexical-text])::before {
			content: attr(data-content);
			position: absolute;
			left: 0;
			right: 0;
			background-color: theme('colors.muted.DEFAULT');
			z-index: -1;
		}

		& :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
			margin-top: 0;
			margin-bottom: 0;
		}
	}

	.api-ref-nav > a {
		@apply mb-3;
		display: block;
	}

	.api-ref-nav a::before {
		@apply rounded-sm border-[1px] border-border font-mono text-xs;
		content: ' ';
		line-height: 1rem;
		position: relative;
		display: inline-block;
		margin-inline-end: 0.5rem;
		padding: 0 0.15rem;
	}

	.api-ref-nav a[href*='types']::before {
		content: 'T';
	}

	.api-ref-nav a[href*='variables']::before {
		content: 'V';
	}

	.api-ref-nav a[href*='functions']::before {
		content: 'F';
	}

	.api-ref-nav a[href*='interfaces']::before {
		content: 'I';
	}

	.api-ref-nav a[href*='classes']::before {
		content: 'C';
	}

	.api-ref-nav > dl > dd > dl {
		@apply pl-2;
	}

	.api-ref-nav dd dd {
		@apply mb-2;
	}

	.api-ref-nav > dl > dt {
		@apply font-medium;
	}

	.in-page-nav {
		@apply sticky top-[94px] w-48 border-l-2 border-dotted border-l-accent-foreground pl-4 text-sm;

		p {
			@apply mb-2;
		}

		li ul {
			@apply pl-2;
		}

		li > a {
			@apply mb-1 block text-primary-foreground;
		}
	}

	.doc-nav {
		& a:hover {
			@apply text-accent-foreground;
		}

		& a[data-current='true'] {
			@apply cursor-default text-accent-foreground;
		}
	}

	.doc-content .homepage ul {
		display: grid;
		grid-template-columns: 1fr 1fr 1fr;
	}

	h2#classes + table,
	h2#functions + table,
	h2#interfaces + table,
	h2#type-aliases + table {
		& td:first-child,
		& tr:first-child {
			width: 50%;
		}
	}

	.feature-overview-popover {
		& a {
			@apply text-accent-foreground;

			& :global(svg) {
				@apply inline;
			}
		}

		& p {
			@apply mb-4;
		}
	}

	a > code {
		text-decoration: none;
		border-bottom: 1px dotted var(--blue9);
	}
}

.full-demo-mdxeditor[class*='popupContainer'] {
	z-index: z-50;
}

.mdxeditor-popup-container {
	z-index: z-50;
}

@layer utilities {
	.bracket-bg {
		&::before {
			content: attr(data-content);
		}
	}
}
